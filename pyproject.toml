# Copyright (c) 2025, NVIDIA CORPORATION.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

[build-system]
requires = ["setuptools<80.0.0", "pybind11", "torch", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["megatron.bridge", "megatron.bridge.*"]

[project]
name = "megatron-bridge"
description = "Megatron Bridge: Training Recipes for Megatron-based LLM and VLM models"
readme = "README.md"
dynamic = ["version"]
license = {file = "LICENSE"}
requires-python = ">=3.10"
authors = [{ name = "NVIDIA", email = "nemo-toolkit@nvidia.com" }]
maintainers = [{ name = "NVIDIA", email = "nemo-toolkit@nvidia.com" }]
keywords = [
    "NLP",
    "NeMo",
    "deep",
    "gpu",
    "language",
    "learning",
    "machine",
    "nvidia",
    "pytorch",
    "speech",
    "torch",
    "tts",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Image Recognition",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Utilities",
]
dependencies = [
    "accelerate>=1.6.0",
    "datasets",
    "numpy<2",
    "omegaconf>=2.3.0",
    "packaging",
    "tensorboard>=2.19.0",
    "torch",
    "transformers>=4.51.3",
    "typing-extensions",
    "rich",
    "wandb>=0.19.10",
    "six>=1.17.0",
    "regex>=2024.11.6",
    "pyyaml>=6.0.2",
    "einops>=0.8.1",
    "sentencepiece>=0.2.0",
    "tiktoken>=0.9.0",
    "tqdm>=4.67.1",
    "hydra-core>1.3,<=1.3.2",
    "megatron-core>=0.14.0a0,<0.15.0",
    "nvidia-modelopt[torch,onnx]>=0.33.0a0,<0.34.0; sys_platform != 'darwin'",
    "nvidia-resiliency-ext>=0.4.0a0,<0.5.0; sys_platform != 'darwin'",
    # "transformer-engine[pytorch]>=2.5.0a0,<2.6.0; sys_platform != 'darwin'"
]


[tool.setuptools.dynamic]
version = { attr = "megatron.bridge.package_info.__version__" }

[tool.uv]
# Currently, TE must be built with no build-isolation b/c it requires torch
# no-build-isolation-package = ["transformer-engine", "transformer-engine-torch"]
prerelease = "allow"

# # uv.sources allows us to override dependencies with VCS commits. 
# # Lets use this only for debugging purposes, but not for production (main).
# [tool.uv.sources]
# transformer-engine = { git = "https://github.com/NVIDIA/TransformerEngine.git", rev = "5f1142e8c12172510d34709df3629be6f88dc993" } # on release_v2.6.0


[project.optional-dependencies]
recipes = [
    "nemo-run>=0.5.0a0,<0.6.0",
]

[dependency-groups]
docs = [
    "myst-parser>=4.0.1",
    "nvidia-sphinx-theme>=0.0.8",
    "sphinx>=8.1.3",
    "sphinx-autobuild>=2024.10.3",
    "sphinx-autodoc2>=0.5.0",
    "sphinx-copybutton>=0.5.2",
]
test = [
    "coverage>=7.8.1",
    "flake8>=7.2.0",
    "pylint>=3.3.7",
    "pytest>=8.3.5",
    "pytest-mock>=3.14.0",
    "pytest-runner>=6.0.1",
    "pygithub",
    "click",
    "multi-storage-client",
]
dev = [
    "pre-commit>=3.6.0",
    "ruff>=0.9.9",
    "mypy>=1.8.0",
]
build = ["setuptools", "torch", "pybind11", "Cython>=3.0.0", "numpy<2.0.0", "ninja"]

[project.entry-points."nemo_run.cli"]
lm = "megatron.bridge"

[project.urls]
Download = "https://github.com/NVIDIA-NeMo/Megatron-Bridge/releases"
Homepage = "https://github.com/NVIDIA-NeMo/Megatron-Bridge"

[tool.pytest.ini_options]
# durations=0 will display all tests execution time, sorted in ascending order starting from from the slowest one.
# -vv will also display tests with durration = 0.00s
addopts = "--verbose --pyargs --durations=0 --strict-markers"  # always add these arguments to pytest
testpaths = ["tests"]
# directories to ignore when discovering tests
norecursedirs = [
    "src",
    "external",
    "examples",
    "docs",
    "scripts",
    "tools",
    "tutorials",
    "*.egg",
    ".*",
    "_darcs",
    "build",
    "CVS",
    "dist",
    "venv",
    "{arch}"
]
# markers to select tests, use `pytest --markers` to see all available markers, `pytest -m "<marker>"` to select tests
markers = [
    "unit: marks unit test, i.e. testing a single, well isolated functionality (deselect with '-m \"not unit\"')",
    "integration: marks test checking the elements when integrated into subsystems (deselect with '-m \"not integration\"')",
    "system: marks test working at the highest integration level (deselect with '-m \"not system\"')",
    "acceptance: marks test checking whether the developed product/model passes the user defined acceptance criteria (deselect with '-m \"not acceptance\"')",
    "docs: mark tests related to documentation (deselect with '-m \"not docs\"')",
    "skipduringci: marks tests that are skipped ci as they are addressed by Jenkins jobs but should be run to test user setups",
    "pleasefixme: marks tests that are broken and need fixing",
]

[tool.coverage.run]
concurrency = ["thread", "multiprocessing"]
omit = [
    "/tmp/*",
    "/workspace/tests/*",
    "/workspace/*.py",
    "*_ray.py",
]

[tool.coverage.paths]
source = [
    ".",
    "/workspace/",
    "/home/runner/work/Megatron-Bridge/Megatron-Bridge",
]
